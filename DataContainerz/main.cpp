#include <iostream>

using namespace std;

/*Структура данных

Простейшей структурой данных является массив. 
Массив - набор элементов одного типа в непрерывной области память
Из непрерывной области памяти вытекают все примущества и недостатки массивов

преимущества массивов

Главное преимузество массивов - быстрый доступ к элементам, который осуществ.
за константное время, поскольку сводится к операции сложения, а операц.
сложения процессор выполняет за одно и тоже время

Главным недостатком массивов - сложность добавления\удаления элементов
которая приводит к доп.затратам ресурсов памяти и процессорного времени

недостатки массивов устраняют списки. Список (list) - набор элементов в
произвольных областях памяти, каждый из которых содержит адрес след.элемента
Последний элемент списка указывает на 0

главным преимуществом спискка по сравнению с массивом - быстрое
добавление/удаление элементов, которое осуществялется за константное время
и не требует доп затрат оперативной памяти( чтобы добавить элемент, не нужно копировать
весь список в другое место, элемент можно создать в любой свободной области 
памяти.

главным недостатком списка - медленный доступ к элементам. Время доступа к элементу списка
зависит от размера списка. Чтобы прочитать последний элемент списка, нужно
пройти через все его элементы начина с начального. и чем длиннее список
чем дольше мы будем идти до конца

Списки бывают односвязные и двусвязные. пока рассматриваем односвязный.



*/


/*
Реализация односвязного списка

реализуется при помощи двух классов
класс Element - описывает структуру элемента
класс ForwardList - однонаправленный - обьединяет элементы в список и отвечает
за добавление/удаление элементов и прочие операции со списком
*/
int main()
{



	return 0;
}